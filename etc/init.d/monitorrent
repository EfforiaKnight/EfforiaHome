#!/bin/sh

### BEGIN INIT INFO
# Provides:          monitorrent
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Daemon for monitorrent server
# Description:       This app can watch for torrent updates.
#                    Github repo https://github.com/werwolfby/monitorrent
### END INIT INFO

# Full path to monitorrent folder (ex: /home/user/monitorrent)
DIR=/opt/monitorrent
SERVICE=$DIR/server.py
# Full path to python you want to use for monitorrent (ex: /usr/bin/python)
SERVICE_RUNNER=/usr/bin/python3
SERVICE_NAME=monitorrent
# Args to pass to a server (ex: "--debug")
SERVICE_ARGS=""


# This next line determines what user the script runs as.
SERVICE_USER=root

# The process ID of the script when it runs is stored here:
PIDFILE=/var/run/$SERVICE_NAME.pid

. /lib/lsb/init-functions

do_start () {
  log_daemon_msg "Starting $SERVICE_NAME service"
  start-stop-daemon --start --background --pidfile $PIDFILE --make-pidfile --user $SERVICE_USER --chuid $SERVICE_USER --chdir $DIR --exec $SERVICE_RUNNER -- $SERVICE $SERVICE_ARGS
  log_end_msg $?
}
do_stop () {
  log_daemon_msg "Stopping $SERVICE_NAME service"
  start-stop-daemon --stop --pidfile $PIDFILE --retry 10
  log_end_msg $?
}
do_uninstall() {
  echo -n "Uninstall "$SERVICE_NAME" service? That cannot be undone. [yes|No] "
  local SURE
  read SURE
  if [ "$SURE" = "yes" ]; then
    stop
    rm -f "$PIDFILE"
    update-rc.d -f "$SERVICE_NAME" remove
    rm -fv "$0"
  fi
}

case "$1" in
  start|stop)
    do_${1}
    ;;

  restart|reload|force-reload)
    do_stop
    do_start
    ;;

  uninstall)
    do_${1}
    ;;

  status)
    status_of_proc "$SERVICE_NAME" "$SERVICE" && exit 0 || exit $?
    ;;

  *)
    echo "Usage: /etc/init.d/$SERVICE_NAME {start|stop|restart|uninstall|status}"
    exit 1
    ;;

esac
exit 0
